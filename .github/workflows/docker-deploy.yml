name: Build and Deploy to Alibaba Cloud

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]

env:
  REGISTRY: crpi-wzl2k45d0lxbiagj.cn-shenzhen.personal.cr.aliyuncs.com
  IMAGE_NAME: bhuang-repo/bhuang-bigmark

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Build with Maven
      run: |
        mvn clean install -DskipTests
        
    - name: Extract metadata
      id: meta
      run: |
        # 获取分支名或标签名
        if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=${GITHUB_REF#refs/tags/}
        else
          VERSION=${GITHUB_REF#refs/heads/}
          VERSION=${VERSION//\//-}
        fi
        
        # 如果是主分支，添加 latest 标签
        if [[ $VERSION == "main" ]] || [[ $VERSION == "master" ]]; then
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:latest"
          TAGS="$TAGS,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION"
        else
          TAGS="${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:$VERSION"
        fi
        
        # 添加 commit SHA 作为额外标签
        TAGS="$TAGS,${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:sha-${GITHUB_SHA::8}"
        
        echo "tags=$TAGS" >> $GITHUB_OUTPUT
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
    - name: Create Dockerfile
      run: |
        cat > Dockerfile << 'EOF'
        FROM openjdk:17-jre-slim
        
        # 设置工作目录
        WORKDIR /app
        
        # 复制应用程序jar文件
        COPY Bhuang-BigMark-app/target/*.jar app.jar
        
        # 暴露端口
        EXPOSE 8091
        
        # 设置JVM参数
        ENV JAVA_OPTS="-Xms512m -Xmx1024m -Dfile.encoding=UTF-8"
        
        # 启动应用
        ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]
        EOF
        
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to Alibaba Cloud Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ secrets.ALIYUN_DOCKER_USERNAME }}
        password: ${{ secrets.ALIYUN_DOCKER_PASSWORD }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Image digest
      run: echo "Docker image has been pushed successfully! 🚀"
      
    - name: Output deployment instructions
      run: |
        echo "🎉 Docker 镜像构建并推送成功！"
        echo ""
        echo "📦 镜像信息："
        echo "Registry: ${{ env.REGISTRY }}"
        echo "Repository: ${{ env.IMAGE_NAME }}"
        echo "Tags: ${{ steps.meta.outputs.tags }}"
        echo ""
        echo "🚀 本地使用说明："
        echo ""
        echo "1️⃣ 登录阿里云 Docker Registry："
        echo "docker login --username=黄帅啊 ${{ env.REGISTRY }}"
        echo ""
        echo "2️⃣ 拉取镜像："
        echo "docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
        echo ""
        echo "3️⃣ 运行容器（开发环境）："
        echo "docker run -d \\"
        echo "  --name bhuang-bigmark-app \\"
        echo "  -p 8091:8091 \\"
        echo "  -e SPRING_PROFILES_ACTIVE=dev \\"
        echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
        echo ""
        echo "4️⃣ 运行容器（生产环境）："
        echo "docker run -d \\"
        echo "  --name bhuang-bigmark-app \\"
        echo "  -p 8091:8091 \\"
        echo "  -e SPRING_PROFILES_ACTIVE=prod \\"
        echo "  -e JAVA_OPTS='-Xms1g -Xmx2g' \\"
        echo "  --restart unless-stopped \\"
        echo "  ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.meta.outputs.version }}"
        echo ""
        echo "5️⃣ 查看应用日志："
        echo "docker logs -f bhuang-bigmark-app"
        echo ""
        echo "6️⃣ 停止和删除容器："
        echo "docker stop bhuang-bigmark-app"
        echo "docker rm bhuang-bigmark-app"
        echo ""
        echo "7️⃣ 访问应用："
        echo "开发环境: http://localhost:8091"
        echo "健康检查: http://localhost:8091/actuator/health"
        echo ""
        echo "📝 提示："
        echo "- 确保本地端口 8091 没有被占用"
        echo "- 如需修改端口，使用 -p 你的端口:8091"
        echo "- 生产环境建议配置外部数据库连接"
        echo "- 可通过环境变量 -e 传递配置参数"
        echo ""
        echo "🔗 完整部署文档请查看："
        echo "https://github.com/${{ github.repository }}/blob/${{ github.ref_name }}/.github/workflows/README.md"
